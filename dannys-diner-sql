--1. What is the total amount each customer spent at the restaurant?
select s.customer_id, sum(m.price) as total
from sales s
inner join menu m on s.product_id = m.product_id
group by s.customer_id;

--2. How many days has each customer visited the restaurant?
select customer_id, count(distinct order_date) as no_of_visits
from sales
group by customer_id;

--3. What was the first item from the menu purchased by each customer?
with t2 as (
 select customer_id, order_date, product_id,
 dense_rank() over (partition by customer_id order by order_date asc) as a
 from sales)

select t2.customer_id, t2.order_date,m.product_name
from t2
join menu m on m.product_id = t2.product_id
where a = 1
group by 1;

--4. What is the most purchased item on the menu and how many times was it
purchased by all customers?
with t3 as (
 select customer_id, product_id, order_date,
 dense_rank() over (partition by customer_id order by product_id desc) as a
 from sales)

select m.product_name, count(t3.product_id) as num_of_purchase
from t3
join menu m on m.product_id = t3.product_id
where a = 1;

--5. Which item was the most popular for each customer?
select customer_id, group_concat(popular_menu), no_popular_order
from (
 select s.customer_id, s.product_id, product_name as popular_menu,
count(s.product_id) as no_popular_order,
 dense_rank() over (partition by customer_id order by count(s.product_id)desc) a
 from sales s
 join menu m on m.product_id = s.product_id
 group by 1, 2) b
where a = 1
group by 1;

--6. Which item was purchased first by the customer after they became a member?
with a as (
 select s.customer_id, min(order_date) as order_date
 from members m
 inner join sales s on s.customer_id = m.customer_id
 and s.order_date >= m.join_date
 group by s.customer_id),
b as (
 select a.customer_id, s.product_id
 from a inner join sales s
 on s.customer_id = a.customer_id
 and s.order_date = a.order_date)
select b.customer_id, mn.product_name
from b inner join menu mn on mn.product_id = b.product_id;

--7. Which item was purchased just before the customer became a member?
with t3 as (
 select s.customer_id, m.product_name,
 dense_rank() over (partition by s.customer_id order by s.order_date)as x
 from sales s
 join menu m on m.product_id = s.product_id
 join members mb on mb.customer_id = s.customer_id
 where s.order_date < mb.join_date)
select customer_id, product_name from t3 where x = 1;

--8. What is the total items and amount spent for each member before they became a
member?
select s.customer_id, count(1) as no_of_items, sum(mn.price) as total_cost
from members m
inner join sales s
on s.customer_id = m.customer_id and s.order_date < m.join_date
join menu mn on mn.product_id = s.product_id
group by s.customer_id;

--9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how
many points would each customer have?
select s.customer_id, sum(case when m.product_name = 'sushi' then m.price*2*10
else m.price*10 end) as points
from sales s
join menu m on s.product_id = m.product_id
group by s.customer_id;

--10. In the first week after a customer joins the program (including their join date)
they earn 2x points on all items, not just sushi - how many points do customer A and
B have at the end of January?
select s.customer_id, sum(m.price)*2*10 as total_sum
from sales s
inner join members m
on s.customer_id = m.customer_id
and s.order_date >= m.join_date and s.order_date <= dateadd(dd,7,mem.join_date)
and s.order_date<'Feb 01 2021'
join menu mn on mn.product_id = s.product_id
group by s.customer_id;
